<Window x:Class="CinemaProject_WPF.Views.BuyTicketWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:System="clr-namespace:System;assembly=mscorlib"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
        mc:Ignorable="d"
        Title="Buy Ticket" Height="1100" Width="1100"
        MinHeight="1100" MaxHeight="1100"
        MinWidth="1100" MaxWidth="1100"
        WindowStartupLocation="CenterScreen">
    <Grid Background="#363636">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="1.5*"></ColumnDefinition>
            <ColumnDefinition Width="4*"></ColumnDefinition>
            <ColumnDefinition Width="2*"></ColumnDefinition>
        </Grid.ColumnDefinitions>

        <Canvas Grid.Row="0">
            <DatePicker DisplayDateStart="{Binding Mode=OneWay, Source={x:Static System:DateTime.Today}}" DisplayDateEnd="{Binding DisplayDateEnd}" 
                        BorderThickness="0" Width="180" Canvas.Left="20" Canvas.Top="15" SelectedDate="{Binding SelectedDate}">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="SelectedDateChanged">
                        <i:InvokeCommandAction Command="{Binding RelativeSource={RelativeSource AncestorType=Window, Mode=FindAncestor}, Path=DataContext.SelectedDateChangedDateCommand}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </DatePicker>

            <Border Canvas.Top="215" Canvas.Right="20" Width="175" Height="110" Background="#D9C590" CornerRadius="10">
                <StackPanel HorizontalAlignment="Left" Margin="5,2,0,0">
                    <Viewbox Height="25" Margin="5">
                        <RadioButton GroupName="g1" IsChecked="{Binding RadioButton1}" Command="{Binding RadioButtonCheckedCommand}" FontSize="16" FontWeight="DemiBold" VerticalContentAlignment="Center">13:00-15:00</RadioButton>
                    </Viewbox>
                    <Viewbox Height="25" Margin="5">
                        <RadioButton GroupName="g1" IsChecked="{Binding RadioButton2}" Command="{Binding RadioButtonCheckedCommand}" FontSize="16" FontWeight="DemiBold" VerticalContentAlignment="Center">16:00-18:00</RadioButton>
                    </Viewbox>
                    <Viewbox Height="25" Margin="7,5,5,5">
                        <RadioButton GroupName="g1" IsChecked="{Binding RadioButton3}" Command="{Binding RadioButtonCheckedCommand}" FontSize="16" FontWeight="DemiBold" VerticalContentAlignment="Center">20:00-22:00</RadioButton>
                    </Viewbox>
                </StackPanel>
            </Border>

            <Label Canvas.Bottom="85" Canvas.Left="20" Style="{StaticResource MovieElements_1_LabelStyle}">Total :</Label>
            <Label Canvas.Bottom="85" Canvas.Left="90" Style="{StaticResource MovieElements_2_LabelStyle}" Content="{Binding Total}"/>
            <Label Canvas.Bottom="85" Canvas.Left="132" Style="{StaticResource MovieElements_2_LabelStyle}" Content="azn"/>

            <Button Canvas.Bottom="20" Canvas.Right="20" Width="180" Command="{Binding BuyTicketCommand}" Style="{StaticResource BuyTicketButtonStyle}"/>
        </Canvas>

        <Grid Grid.Column="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="1.1*"/>
                <RowDefinition Height="2*"/>
            </Grid.RowDefinitions>

            <Grid Grid.Row="0">
                <ListBox ItemsSource="{Binding ExpensiveSeats, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource SeatItemStyle}">
                    <ListBox.ItemsPanel>
                        <ItemsPanelTemplate>
                            <WrapPanel Orientation="Horizontal"/>
                        </ItemsPanelTemplate>
                    </ListBox.ItemsPanel>
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <ToggleButton Style="{DynamicResource SelectChairButtonStyle}" Content="{Binding Path=Content}" IsEnabled="{Binding IsEnabled}">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="Unchecked">
                                        <i:InvokeCommandAction
                                            Command="{Binding RelativeSource={RelativeSource AncestorType=Window, Mode=FindAncestor}, Path=DataContext.UnCheckedExpensiveSeatCommand}"
                                            CommandParameter="{Binding Path=Content}"/>
                                    </i:EventTrigger>
                                    <i:EventTrigger EventName="Checked">
                                        <i:InvokeCommandAction
                                            Command="{Binding RelativeSource={RelativeSource AncestorType=Window, Mode=FindAncestor}, Path=DataContext.CheckedExpensiveSeatCommand}" 
                                            CommandParameter="{Binding Path=Content}"/>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                            </ToggleButton>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                </ListBox>
            </Grid>
            <Grid Grid.Row="1">
                <ListBox ItemsSource="{Binding CheapSeats, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource SeatItemStyle}">
                    <ListBox.ItemsPanel>
                        <ItemsPanelTemplate>
                            <WrapPanel Orientation="Horizontal"/>
                        </ItemsPanelTemplate>
                    </ListBox.ItemsPanel>
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <ToggleButton Style="{DynamicResource SelectChairButtonStyle}" Content="{Binding Path=Content}" IsEnabled="{Binding IsEnabled}">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="Unchecked">
                                        <i:InvokeCommandAction
                                            Command="{Binding RelativeSource={RelativeSource AncestorType=Window, Mode=FindAncestor}, Path=DataContext.UnCheckedCheapSeatCommand}"
                                            CommandParameter="{Binding Path=Content}"/>
                                    </i:EventTrigger>
                                    <i:EventTrigger EventName="Checked">
                                        <i:InvokeCommandAction 
                                            Command="{Binding RelativeSource={RelativeSource AncestorType=Window, Mode=FindAncestor}, Path=DataContext.CheckedCheapSeatCommand}"
                                            CommandParameter="{Binding Path=Content}"/>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                            </ToggleButton>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                </ListBox>
            </Grid>
        </Grid>

        <Canvas Grid.Column="2">
            <Label Content="Snacks" Foreground="White" FontSize="35" FontWeight="DemiBold" FontFamily="Arial" Canvas.Top="5" Canvas.Left="65"/>
            <ListBox
                IsEnabled="False"
                Canvas.Bottom="5"
                Canvas.Right="10" 
                Style="{StaticResource ProductListStyle}"
                ItemsSource="{Binding Products}" 
                BorderThickness="0" 
                ScrollViewer.HorizontalScrollBarVisibility="Disabled" 
                ScrollViewer.VerticalScrollBarVisibility="Disabled" 
                Padding="0">
                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <Border Width="290" Height="65" Canvas.Left="10" Canvas.Top="60" Background="#CCA43B" CornerRadius="8" Margin="0,6">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="0.9*"/>
                                    <ColumnDefinition Width="1.5*"/>
                                    <ColumnDefinition Width="0.9*"/>
                                    <ColumnDefinition Width="1*"/>
                                </Grid.ColumnDefinitions>
                                <Image Grid.Column="0" Margin="9,0,0,0" Width="50" Source="{Binding ImagePath}"/>
                                <Label Grid.Column="1" Content="{Binding Name}" Margin="5,15,0,0" FontSize="22" FontWeight="DemiBold" />
                                <Label Grid.Column="2" Content="{Binding Price}" Margin="0,15,0,0" FontSize="22" FontWeight="DemiBold"/>
                                <xctk:IntegerUpDown Grid.Column="3" Width="60" Height="40" Minimum="0" Maximum="50" Margin="0,0,0,0" FontSize="25"
                                                    Value="{Binding Valuee, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Padding="0,0,10,0">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="ValueChanged">
                                            <i:InvokeCommandAction
                                                Command="{Binding RelativeSource={RelativeSource AncestorType=Window, Mode=FindAncestor}, Path=DataContext.SelectProductCommand}"
                                                CommandParameter="{Binding Price}"/>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </xctk:IntegerUpDown>
                            </Grid>
                        </Border>
                    </DataTemplate>
                </ListBox.ItemTemplate>
            </ListBox>
        </Canvas>
    </Grid>
</Window>
